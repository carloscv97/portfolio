---
import ThemeToggle from './ThemeToggle';
---

<header
  id="header-nav"
  class="sticky h-16 top-0 z-10 dark:bg-dark-blue dark:bg-opacity-80 mx-auto max-w-3xl flex justify-between items-center py-1 px-5 bg-opacity-80 backdrop-blur-lg"
>
  <div class="flex flex-1 relative items-center gap-5" id="content-avatar">
    <figure
      class="relative border-white bg-blue-200 dark:bg-gray-800/80 border-[3px] rounded-md dark:border-gray-700 shadow-lg overflow-hidden"
    >
      <img
        src="/avatar.svg"
        alt="avatar"
        class="size-8 relative -bottom-[1px] object-fill"
      />
    </figure>
    <span
      class="font-semibold text-lg whitespace-nowrap text-slate-600 dark:text-slate-300"
    >
      Carlos C<span class="ml-[2px] text-sky-blue">.</span>
    </span>
  </div>
  <ThemeToggle client:only />
</header>

<style>
  @keyframes avatar-appear {
    0% {
      opacity: 0;
      transform: translateY(-20px);
    }
    100% {
      opacity: 1;
      transform: translateY(0);
    }
  }

  #content-avatar {
    animation: avatar-appear linear both;
    animation-timeline: scroll();
    animation-range: 0px 300px;
  }
</style>

<script is:inline>
  // @keyframes avatar-appear {
  //   0% {
  //     opacity: 0;
  //     transform: translateY(-20px);
  //   }
  //   100% {
  //     opacity: 1;
  //     transform: translateY(0);
  //   }
  // }

  // #content-avatar {
  //   animation: avatar-appear linear both;
  //   animation-timeline: scroll();
  //   animation-range: 0px 300px;
  // }

  document.addEventListener('DOMContentLoaded', function () {
    // Define la animación usando anime.js
    const avatarAnimation = anime.timeline({
      targets: '#content-avatar',
      autoplay: false, // Para iniciar manualmente la animación
    });

    avatarAnimation.add({
      opacity: 0,
      translateY: -20,
    });

    avatarAnimation.add({
      opacity: 1,
      translateY: 0,
    });

    function playAnimation() {
      avatarAnimation.play();
    }

    // Agrega la animación al hacer scroll
    window.addEventListener('scroll', function () {
      const scrollY = window.scrollY;
      const triggerPoint = 300; // Puedes ajustar esto según tus necesidades

      if (scrollY < triggerPoint) {
        avatarAnimation.seek(0); // Reinicia la animación si el scroll es antes del punto de activación
      } else {
        avatarAnimation.seek(1); // Reproduce la animación completa si el scroll está en o después del punto de activación
      }
    });

    // Agrega la animación al hacer touch
    let touchStartY;

    window.addEventListener('touchstart', function (e) {
      touchStartY = e.touches[0].clientY;
      playAnimation(); // Inicia la animación al tocar la pantalla
    });

    window.addEventListener('touchmove', function (e) {
      const currentY = e.touches[0].clientY;
      const deltaY = currentY - touchStartY;

      // Puedes realizar acciones adicionales según el desplazamiento táctil si es necesario

      // Nota: Si quieres ajustar la animación según el desplazamiento táctil,
      // puedes modificar el código aquí según tus necesidades
    });
  });
</script>
